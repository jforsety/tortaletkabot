"""–û–±—Ä–∞—â–µ–Ω–∏–µ –∫ GigaChat —Å –ø–æ–º–æ—â—å—é GigaChain"""
import os

from langchain_core.messages import HumanMessage, SystemMessage
from langchain_gigachat.chat_models import GigaChat

from app_bot.database import profile_attempts, edit_attempts


messages = [
            SystemMessage(
                content="–¢—ã —ç–º–ø–∞—Ç–∏—á–Ω—ã–π –±–æ—Ç, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–µ—à–∏—Ç—å –µ–≥–æ –ø—Ä–æ–±–ª–µ–º—ã."
            )
        ]


def start_gigachat(message):
    attempt_user = profile_attempts(message)
    if attempt_user[0] > 0:
        # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ GigaChat
        model = GigaChat(
            credentials=os.environ.get("AUTHORIZATION_KEY"),
            scope="GIGACHAT_API_PERS",
            model="GigaChat",
            # –û—Ç–∫–ª—é—á–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞–ª–∏—á–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –ù–£–¶ –ú–∏–Ω—Ü–∏—Ñ—Ä—ã
            verify_ssl_certs=False,
        )

        user_input = message.text
        if user_input == "/reset":
            messages.clear()
            return "–í–∞—à –∫–æ–Ω—Ç–µ–∫—Å—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω."
        messages.append(HumanMessage(content=user_input))
        res = model.invoke(messages)
        messages.append(res)
        edit_attempts(message)
        return f"{res.content}\n\n–ù–∞–∂–º–∏—Ç–µ /reset, —á—Ç–æ–±—ã —Å–±—Ä–æ—Å–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–∞–ø—Ä–æ—Å–æ–≤."
    else:
        return "üò¢ –í–∞—à–∏ –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å"
